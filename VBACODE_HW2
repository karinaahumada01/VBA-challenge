Sub MultipleStock()
    On Error GoTo ErrorHandler
    
    Dim ws As Worksheet
    Dim Ticker As String
    Dim OpenPrice As Double
    Dim ClosePrice As Double
    Dim TotalStockVolume As Double
    Dim QuarterlyChange As Double
    Dim PercentChange As Double
    Dim GreatestIncrease As Double
    Dim GreatestDecrease As Double
    Dim GreatestVolume As Double
    Dim GreatestIncreaseTicker As String
    Dim GreatestDecreaseTicker As String
    Dim GreatestVolumeTicker As String
    Dim StartRow As Long
    Dim LastRow As Long
    Dim EndRow As Long
    Dim TickerRow As Long
    Dim x As Long
    
    Application.ScreenUpdating = False
    Application.Calculation = xlCalculationManual
    
    For Each ws In ThisWorkbook.Worksheets
        With ws
            ' Clear previous results
            .Range("I:Q").Clear
            
            ' Set up headers
            .Cells(1, 9).Value = "Ticker"
            .Cells(1, 10).Value = "Quarterly Change"
            .Cells(1, 11).Value = "Percent Change"
            .Cells(1, 12).Value = "Total Stock Volume"
            .Cells(1, 15).Value = "Category"
            .Cells(1, 16).Value = "Ticker"
            .Cells(1, 17).Value = "Value"
            .Cells(2, 15).Value = "Greatest % Increase"
            .Cells(3, 15).Value = "Greatest % Decrease"
            .Cells(4, 15).Value = "Greatest Total Volume"
            
            LastRow = .Cells(.Rows.Count, 1).End(xlUp).Row
            
            TickerRow = 2
            StartRow = 2
            GreatestIncrease = -1 ' Initialize to a very low value
            GreatestDecrease = 1  ' Initialize to a very high value
            GreatestVolume = 0
            TotalStockVolume = 0
            OpenPrice = .Cells(StartRow, 3).Value
            
            For x = 2 To LastRow
                If x = LastRow Then
                    EndRow = x
                ElseIf .Cells(x + 1, 1).Value <> .Cells(x, 1).Value Then
                    EndRow = x
                Else
                    TotalStockVolume = TotalStockVolume + .Cells(x, 7).Value
                    GoTo NextIteration
                End If
                
                ClosePrice = .Cells(EndRow, 6).Value
                Ticker = .Cells(x, 1).Value
                TotalStockVolume = TotalStockVolume + .Cells(x, 7).Value
                
                .Cells(TickerRow, 9).Value = Ticker
                .Cells(TickerRow, 12).Value = TotalStockVolume
                
                QuarterlyChange = ClosePrice - OpenPrice
                .Cells(TickerRow, 10).Value = QuarterlyChange
                
                If OpenPrice <> 0 Then
                    PercentChange = QuarterlyChange / OpenPrice
                Else
                    PercentChange = 0
                End If
                
                .Cells(TickerRow, 11).Value = PercentChange
                
                ' Conditional formatting
                If QuarterlyChange >= 0 Then
                    .Cells(TickerRow, 10).Interior.Color = RGB(0, 255, 0) ' Green
                Else
                    .Cells(TickerRow, 10).Interior.Color = RGB(255, 0, 0) ' Red
                End If
                
                ' Check for greatest values
                If PercentChange > GreatestIncrease Then
                    GreatestIncrease = PercentChange
                    GreatestIncreaseTicker = Ticker
                End If
                
                If PercentChange < GreatestDecrease Then
                    GreatestDecrease = PercentChange
                    GreatestDecreaseTicker = Ticker
                End If
                
                If TotalStockVolume > GreatestVolume Then
                    GreatestVolume = TotalStockVolume
                    GreatestVolumeTicker = Ticker
                End If
                
                TickerRow = TickerRow + 1
                OpenPrice = .Cells(x + 1, 3).Value
                TotalStockVolume = 0
                
NextIteration:
            Next x
            
            ' Output greatest values
            .Cells(2, 16).Value = GreatestIncreaseTicker
            .Cells(2, 17).Value = GreatestIncrease
            .Cells(3, 16).Value = GreatestDecreaseTicker
            .Cells(3, 17).Value = GreatestDecrease
            .Cells(4, 16).Value = GreatestVolumeTicker
            .Cells(4, 17).Value = GreatestVolume
            
            ' Format cells
            .Range("K:K").NumberFormat = "0.00%"
            .Range("Q2:Q3").NumberFormat = "0.00%"
            .Cells(4, 17).NumberFormat = "0.00E+00"
            
            ' Autofit columns
            .Columns("I:Q").AutoFit
        End With
    Next ws
    
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True
    MsgBox "Analysis complete!", vbInformation
    Exit Sub

ErrorHandler:
    MsgBox "Error " & Err.Number & ": " & Err.Description & " in line " & Erl, vbCritical
    Application.Calculation = xlCalculationAutomatic
    Application.ScreenUpdating = True
End Sub

